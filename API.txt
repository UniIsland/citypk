// API to get information

1.1
server will notify server status:
{
  update: true/false: true means client need to poll data from server.
  winner: -1/0/1,
  broadcast: 'broadcast message, like BJ give SH a kick and SH lose 15 points',
}

1.2.0
API: get battle field list
URL: http://test.com/api/battles
[
  {
    bf_id: 12345,
    fighters: [
      {
        'name': 'SH',
        'photo': 'http://test.com/sh.jpg'
      },
      {
        'name': 'BJ',
        'photo': 'http://test.com/bj.jpg'
      }
    ]
    description: 'describe this battle field',
    participants: 12300, // how many participants,
    status: 0|1|2, // 0: not started, 1: ongoing, 2: finished
    winner: 0/1, // which side wins
  }
]


1.2
API: collect all information.
URL: http://test.com/api/battle/{bf_id}
{
  bf_id: 12345, //which battle field this is for
  description: 'describe this battle field',
  participants: 12300,
  winner: 0/1,
  time_left: 10800, // how many seconds this battle will be over
  fighters: [{  // city 0
    name: 'BJ',
    current_photo: 'http://test.com/bj.jpg',
    description: 'BJ is bla bla bla...',
    blood: 10, // how many blood left
    recent_posts: [{
      // see API 1.3
    }],
    hottest_posts: [{
    }]
  }, {          // city 1

  }]
}

1.3
API: get posts for a fighter. 
URL: http://test.com/api/posts/{battle_filed_id}/{fighter_id}/(recent|hottest)
Return:
  [{
    post_id: 123456, // id for the post,
    author_id: 3445236, // weibo account id,
    author_name: xxx
    author_avatar: xxx
    comment: "this is cool", // comment user posted.
    photo_url: "http://test.com/test.jpg",
    votes: 100
  }]

1.4
API: send a post
post to: http://test.com/api/post
{
  bf_id: 12345,
  fighter: 0/1,
  comment: "this is super cool. http://abcd.com/abcd.jpg"
}
return:
{
  'post_id': 123456,
  'status': 1|0, // success/fail
  'message': 'some failing message'
}

1.5
API: post a vote
post to: http://test.com/api/vote
{
  post_id: 123456
}
return:
{
  'status': 1|0, //success/fail
  'message': 'some failing message'
